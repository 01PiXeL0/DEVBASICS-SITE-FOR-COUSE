document.addEventListener('DOMContentLoaded', function() {
    // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∏–∑ localStorage
    const progress = JSON.parse(localStorage.getItem('courseProgress') || '{}');
    const htmlCssProgress = progress['html-css'] || {};
    
    // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —É—Ä–æ–∫–æ–≤
    function updateLessonsStatus() {
        const lessonCards = document.querySelectorAll('.lesson-card');
        let nextLessonFound = false;
        
        lessonCards.forEach((card) => {
            const lessonNumber = parseInt(card.dataset.lesson);
            const isCompleted = htmlCssProgress[`lesson${lessonNumber}`];
            const previousLessonCompleted = lessonNumber === 1 || htmlCssProgress[`lesson${lessonNumber - 1}`];
            
            // –û—á–∏—â–∞–µ–º –≤—Å–µ –∫–ª–∞—Å—Å—ã –∏ —Å—Ç–∏–ª–∏
            card.classList.remove('completed', 'locked');
            card.style.pointerEvents = 'auto';
            
            // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –±–µ–π–¥–∂–∏
            const existingBadge = card.querySelector('.completed-badge');
            if (existingBadge) {
                existingBadge.remove();
            }
            
            if (isCompleted) {
                // –£—Ä–æ–∫ –ø—Ä–æ–π–¥–µ–Ω
                card.classList.add('completed');
                const icon = card.querySelector('.lesson-meta i:last-child');
                icon.className = 'fas fa-check-circle';
                icon.style.color = '#2ecc71';
                
                // –î–æ–±–∞–≤–ª—è–µ–º –±–µ–π–¥–∂ "–ü—Ä–æ–π–¥–µ–Ω–æ"
                const badge = document.createElement('div');
                badge.className = 'completed-badge';
                badge.textContent = '–ü—Ä–æ–π–¥–µ–Ω–æ';
                card.appendChild(badge);
            } else if (!previousLessonCompleted) {
                // –£—Ä–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω
                card.classList.add('locked');
                card.style.pointerEvents = 'none';
                const icon = card.querySelector('.lesson-meta i:last-child');
                icon.className = 'fas fa-lock';
                
                card.addEventListener('click', (e) => {
                    e.preventDefault();
                    showNotification('–°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏—Ç–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —É—Ä–æ–∫', 'error');
                });
            } else if (!nextLessonFound) {
                // –°–ª–µ–¥—É—é—â–∏–π –¥–æ—Å—Ç—É–ø–Ω—ã–π —É—Ä–æ–∫
                nextLessonFound = true;
                const icon = card.querySelector('.lesson-meta i:last-child');
                icon.className = 'fas fa-play-circle';
                icon.style.color = 'var(--primary-color)';
            }
        });
    }

    // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
    function updateProgressBar() {
        const totalLessons = 15;
        const completedLessons = Object.values(htmlCssProgress).filter(value => value === true).length;
        const progressPercentage = (completedLessons / totalLessons) * 100;
        
        const progressBar = document.querySelector('.progress');
        const progressText = document.querySelector('.progress-card p');
        
        progressBar.style.width = `${progressPercentage}%`;
        progressText.textContent = `${completedLessons} –∏–∑ ${totalLessons} —É—Ä–æ–∫–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ`;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞—á–∞—Ç—å –∫—É—Ä—Å"
        const startButton = document.querySelector('.start-course');
        if (completedLessons > 0) {
            startButton.textContent = '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ';
            // –ù–∞—Ö–æ–¥–∏–º –ø–µ—Ä–≤—ã–π –Ω–µ–ø—Ä–æ–π–¥–µ–Ω–Ω—ã–π —É—Ä–æ–∫
            const nextLesson = document.querySelector('.lesson-card:not(.completed):not(.locked)');
            if (nextLesson) {
                startButton.href = nextLesson.href;
            }
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    function showNotification(message, type = 'success') {
        const notification = document.createElement('div');
        notification.className = `notification ${type}`;
        notification.textContent = message;
        
        // –°—Ç–∏–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        Object.assign(notification.style, {
            position: 'fixed',
            top: '20px',
            right: '20px',
            padding: '15px 25px',
            borderRadius: '5px',
            backgroundColor: type === 'error' ? '#e74c3c' : '#2ecc71',
            color: 'white',
            zIndex: '1000',
            opacity: '0',
            transition: 'opacity 0.3s ease'
        });

        document.body.appendChild(notification);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        setTimeout(() => notification.style.opacity = '1', 10);
        
        // –°–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            notification.style.opacity = '0';
            setTimeout(() => notification.remove(), 300);
        }, 3000);
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Ä–æ–∫–∞
    if (document.querySelector('.complete-lesson')) {
        document.querySelector('.complete-lesson').addEventListener('click', function() {
            const currentLesson = parseInt(this.dataset.lesson);
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
            htmlCssProgress[`lesson${currentLesson}`] = true;
            progress['html-css'] = htmlCssProgress;
            localStorage.setItem('courseProgress', JSON.stringify(progress));
            
            // –û–±–Ω–æ–≤–ª—è–µ–º UI
            this.textContent = '–£—Ä–æ–∫ –ø—Ä–æ–π–¥–µ–Ω ‚úì';
            this.classList.add('completed');
            this.disabled = true;
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            showNotification('–£—Ä–æ–∫ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω! üéâ');
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
            updateLessonsStatus();
            updateProgressBar();
            
            // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫
            const nextLessonCard = document.querySelector(`.lesson-card[data-lesson="${currentLesson + 1}"]`);
            if (nextLessonCard) {
                nextLessonCard.classList.remove('locked');
                nextLessonCard.style.pointerEvents = 'auto';
                const icon = nextLessonCard.querySelector('.lesson-meta i:last-child');
                icon.className = 'fas fa-play-circle';
            }
        });
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    updateLessonsStatus();
    updateProgressBar();
});