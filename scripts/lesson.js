document.addEventListener('DOMContentLoaded', function() {
    // –ö–Ω–æ–ø–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞
    const copyButtons = document.querySelectorAll('.btn-copy');
    copyButtons.forEach(button => {
        button.addEventListener('click', function() {
            const codeBlock = this.previousElementSibling;
            const code = codeBlock.textContent;
            
            navigator.clipboard.writeText(code).then(() => {
                const originalText = this.textContent;
                this.textContent = '–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!';
                setTimeout(() => {
                    this.textContent = originalText;
                }, 2000);
            }).catch(err => {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏:', err);
            });
        });
    });

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è
    const checkButton = document.querySelector('.btn-check');
    const codeTextarea = document.querySelector('#practice-code');

    checkButton.addEventListener('click', function() {
        const code = codeTextarea.value;
        
        // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π DOM-—ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ HTML
        const parser = new DOMParser();
        const doc = parser.parseFromString(code, 'text/html');
        
        let errors = [];
        let successes = [];
        let allCorrect = true;

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º DOCTYPE
        if (!code.toLowerCase().includes('<!doctype html>')) {
            errors.push('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç DOCTYPE declaration');
            allCorrect = false;
        } else {
            successes.push('‚úÖ DOCTYPE —É–∫–∞–∑–∞–Ω –≤–µ—Ä–Ω–æ');
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        if (!doc.querySelector('html')) {
            errors.push('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–æ—Ä–Ω–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç <html>');
            allCorrect = false;
        } else {
            successes.push('‚úÖ –≠–ª–µ–º–µ–Ω—Ç <html> –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
        }

        if (!doc.querySelector('head')) {
            errors.push('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —ç–ª–µ–º–µ–Ω—Ç <head>');
            allCorrect = false;
        } else {
            successes.push('‚úÖ –≠–ª–µ–º–µ–Ω—Ç <head> –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
        }

        if (!doc.querySelector('title')) {
            errors.push('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —ç–ª–µ–º–µ–Ω—Ç <title>');
            allCorrect = false;
        } else {
            successes.push('‚úÖ –≠–ª–µ–º–µ–Ω—Ç <title> –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
        }

        if (!doc.querySelector('body')) {
            errors.push('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —ç–ª–µ–º–µ–Ω—Ç <body>');
            allCorrect = false;
        } else {
            successes.push('‚úÖ –≠–ª–µ–º–µ–Ω—Ç <body> –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏ –ø–∞—Ä–∞–≥—Ä–∞—Ñ—ã
        const h1Elements = doc.querySelectorAll('h1');
        if (h1Elements.length === 0) {
            errors.push('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø–µ—Ä–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è <h1>');
            allCorrect = false;
        } else if (h1Elements.length > 1) {
            errors.push('‚ö†Ô∏è –ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –±–æ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞ <h1>');
            allCorrect = false;
        } else {
            successes.push('‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ <h1> –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
        }

        const h2Elements = doc.querySelectorAll('h2');
        if (h2Elements.length === 0) {
            errors.push('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤—Ç–æ—Ä–æ–≥–æ —É—Ä–æ–≤–Ω—è <h2>');
            allCorrect = false;
        } else {
            successes.push('‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ <h2> –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
        }

        const paragraphs = doc.querySelectorAll('p');
        if (paragraphs.length < 2) {
            errors.push('‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –º–∏–Ω–∏–º—É–º –¥–≤–∞ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞ <p>');
            allCorrect = false;
        } else {
            successes.push('‚úÖ –ü–∞—Ä–∞–≥—Ä–∞—Ñ—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç (–º–∏–Ω–∏–º—É–º 2)');
        }

        // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ, –µ—Å–ª–∏ –æ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        const existingModal = document.querySelector('.result-modal');
        if (existingModal) {
            existingModal.remove();
        }

        // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
        const modal = document.createElement('div');
        modal.className = 'result-modal';
        modal.innerHTML = `
            <div class="modal-content">
                <div class="modal-header">
                    ${allCorrect 
                        ? '<h3>üéâ –û—Ç–ª–∏—á–Ω–æ! –í—Å–µ –≤–µ—Ä–Ω–æ!</h3>' 
                        : '<h3>ü§î –ï—Å—Ç—å —á—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å</h3>'
                    }
                    <button class="modal-close-btn">&times;</button>
                </div>
                <div class="results-list">
                    ${errors.length > 0 ? errors.map(e => `<div class="error-item">${e}</div>`).join('') : ''}
                    ${successes.length > 0 ? successes.map(s => `<div class="success-item">${s}</div>`).join('') : ''}
                </div>
                <button class="modal-close">–ó–∞–∫—Ä—ã—Ç—å</button>
            </div>
        `;

        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        const modalStyles = `
            .result-modal {
                position: fixed;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background: rgba(0, 0, 0, 0.8);
                display: flex;
                justify-content: center;
                align-items: center;
                z-index: 1000;
            }
            .modal-content {
                background: var(--card-background);
                padding: 30px;
                border-radius: 15px;
                max-width: 500px;
                width: 90%;
                border: 2px solid var(--primary-color);
                position: relative;
            }
            .modal-header {
                display: flex;
                justify-content: space-between;
                align-items: center;
                margin-bottom: 20px;
                padding-bottom: 10px;
                border-bottom: 1px solid var(--primary-color);
            }
            .modal-content h3 {
                color: var(--primary-color);
                margin: 0;
                font-size: 1.5rem;
            }
            .modal-close-btn {
                background: none;
                border: none;
                color: var(--primary-color);
                font-size: 24px;
                cursor: pointer;
                padding: 0;
                line-height: 1;
            }
            .modal-close-btn:hover {
                color: var(--secondary-color);
            }
            .results-list {
                margin-bottom: 20px;
                max-height: 300px;
                overflow-y: auto;
            }
            .success-item {
                color: #2ecc71;
                margin-bottom: 10px;
                padding: 5px 0;
            }
            .error-item {
                color: #e74c3c;
                margin-bottom: 10px;
                padding: 5px 0;
            }
            .modal-close {
                background: var(--primary-color);
                color: #000;
                border: none;
                padding: 10px 20px;
                border-radius: 5px;
                cursor: pointer;
                font-weight: bold;
                width: 100%;
                transition: background-color 0.3s;
            }
            .modal-close:hover {
                background: var(--secondary-color);
            }
        `;

        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
        const styleSheet = document.createElement('style');
        styleSheet.textContent = modalStyles;
        document.head.appendChild(styleSheet);
        document.body.appendChild(modal);

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        const closeModal = () => {
            modal.remove();
            styleSheet.remove();
        };

        modal.querySelector('.modal-close-btn').addEventListener('click', closeModal);
        modal.querySelector('.modal-close').addEventListener('click', closeModal);
        modal.addEventListener('click', (e) => {
            if (e.target === modal) {
                closeModal();
            }
        });

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∞–≤–∏—à–∏ Escape
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closeModal();
            }
        });

        // –ï—Å–ª–∏ –≤—Å–µ –≤–µ—Ä–Ω–æ, –¥–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å success –∫–Ω–æ–ø–∫–µ
        if (allCorrect) {
            checkButton.classList.add('success');
        } else {
            checkButton.classList.remove('success');
        }
    });

    // –ö–Ω–æ–ø–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Ä–æ–∫–∞
    const completeButton = document.querySelector('.complete-lesson');
    completeButton.addEventListener('click', function() {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
        const progress = JSON.parse(localStorage.getItem('courseProgress') || '{}');
        progress['html-css'] = progress['html-css'] || {};
        progress['html-css'].lesson1 = true;
        progress['html-css'].lastCompletedLesson = 1;
        localStorage.setItem('courseProgress', JSON.stringify(progress));

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
        completeButton.textContent = '–£—Ä–æ–∫ –ø—Ä–æ–π–¥–µ–Ω ‚úì';
        completeButton.classList.add('completed');
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —É—Ä–æ–∫ —É–∂–µ –ø—Ä–æ–π–¥–µ–Ω
    const progress = JSON.parse(localStorage.getItem('courseProgress') || '{}');
    if (progress['html-css']?.lesson1) {
        completeButton.textContent = '–£—Ä–æ–∫ –ø—Ä–æ–π–¥–µ–Ω ‚úì';
        completeButton.classList.add('completed');
    }
});